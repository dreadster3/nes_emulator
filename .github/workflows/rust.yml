name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Cinstrument-coverage"
  LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install grcov
        run: cargo install grcov

      - name: Build
        run: cargo build --verbose

      - name: Run tests with coverage
        run: cargo test --verbose

      - name: Generate coverage report
        run: |
          grcov . --binary-path ./target/debug/ -s . -t html --branch --ignore-not-existing -o ./coverage-report

      - name: Create shields.io badges
        run: |
          mkdir -p ./coverage-report/badges

          # Create build status badge (green for success, red for failure)
          if [ "${{ job.status }}" == "success" ]; then
            curl -o ./coverage-report/badges/build-status.svg "https://img.shields.io/badge/build-passing-brightgreen"
          else
            curl -o ./coverage-report/badges/build-status.svg "https://img.shields.io/badge/build-failing-red"
          fi

      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v5

      - name: Upload artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: "coverage-report"

      - name: Deploy to GitHub Pages
        id: deployment
        if: github.ref == 'refs/heads/main'
        uses: actions/deploy-pages@v4
